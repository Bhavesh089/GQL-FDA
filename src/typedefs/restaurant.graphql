type Query {
  get_restaurants: GetRestaurantsResponse
  get_restaurant(
    id: String
  ): GetRestaurantResponse
  get_restaurant_by_user_id(user_id: String!): GetRestaurantsResponse
  get_restaurant_by_ids(ids: [String!]): GetRestaurantsResponse
}

type Mutation {
  create_restaurants(restaurants: [RestaurantInput]): GetRestaurantsResponse
  update_restaurant(restaurant: RestaurantUpdateInput ): GetRestaurantResponse

}

type GetRestaurantResponse{
  statusCode: String
  message: String
  restaurant: RestaurantValues
}

type GetRestaurantsResponse{
  statusCode: String
  message: String
  restaurants: [RestaurantValues]
}

type RestaurantValues{
   menu: [
      String
    ],
    user_id: String,
    commission_rate: Float,
    rating: Int,
    total_earnings: Int,
    operating_hours: String,
    contact_details: String,
    cuisine_type: String,
    address: String,
    description: String,
    id: String,
    name: String
}

input RestaurantUpdateInput{
    id: String!
  user_id: String
  name: String
  description: String
  address: String
  rating: Float
  menu: [String]
  cuisine_type: String
  operating_hours: String
  contact_details: String
  commission_rate: Float
  total_earnings: Float
}

input RestaurantInput{
  user_id: String!
  name: String
  description: String
  address: String
  rating: Float
  menu: [String]
  cuisine_type: String
  operating_hours: String
  contact_details: String
  commission_rate: Float
  total_earnings: Float
}